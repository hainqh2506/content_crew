import gradio as gr
import uuid
from typing import List, Dict, Any, Optional
from main_flow import ContentChatFlow
from data import ContentInfo
            
# --- Giao di·ªán Gradio ---
class ChatbotInterface:
    def __init__(self):
        self.chat_flows = {}
        self.chat_id = None
        self.default_response = [{"role": "assistant", "content": "Ch√†o b·∫°n, h√£y nh·∫≠p c√°c tr∆∞·ªùng th√¥ng tin v√† m√¨nh s·∫Ω gi√∫p t·∫°o content cho b·∫°n?"}]
    def chat(self, message: str, history: List[Dict[str, Any]],topic: str, goal: str, audience: str, brand: str, style: str) -> List[Dict[str, Any]]:
        """Process chat messages and maintain conversation history"""
        if not self.chat_id or not message:
            # Initialize new chat session
            self.chat_id = str(uuid.uuid4())
            self.chat_flows[self.chat_id] = ContentChatFlow() # t·∫°o flow
            
        # T·∫°o ContentInfo t·ª´ input ng∆∞·ªùi d√πng
        content_info = ContentInfo(
            topic=topic,
            communication_goal=goal,
            target_audience=audience,
            brand_information=brand,
            style_and_tone=style
        )
        # N·∫øu ng∆∞·ªùi d√πng g·ª≠i tin nh·∫Øn, th√™m tin nh·∫Øn c·ªßa h·ªç v√†o l·ªãch s·ª≠ tr∆∞·ªõc khi x·ª≠ l√Ω
        new_history = history.copy()
        new_history.append({"role": "user", "content": message})

        # X·ª≠ l√Ω tin nh·∫Øn c·ªßa ng∆∞·ªùi d√πng v√† nh·∫≠n ph·∫£n h·ªìi t·ª´ chatbot
        bot_response = self._process_message(message, self.chat_id, new_history,content_info)
        print(f"[chat] Ph·∫£n h·ªìi c·ªßa chatbot: {bot_response}")

        # C·∫≠p nh·∫≠t l·ªãch s·ª≠ v·ªõi ph·∫£n h·ªìi c·ªßa chatbot
        new_history.append({"role": "assistant", "content": bot_response})

        # Tr·∫£ v·ªÅ danh s√°ch ƒë·ªÉ hi·ªÉn th·ªã ƒë√∫ng th·ª© t·ª± tin nh·∫Øn c·ªßa ng∆∞·ªùi d√πng v√† chatbot
        return [
            {"role": "assistant", "content": bot_response}  # Hi·ªÉn th·ªã ph·∫£n h·ªìi chatbot
        ]
        #return new_history
    # h√†m x·ª≠ l√Ω tin nh·∫Øn v√† tr·∫£ v·ªÅ ph·∫£n h·ªìi
    def _process_message(
        self, message: str, chat_id: str, history: List[Dict[str, Any]] = [], content_info: ContentInfo = None
    ) -> str:
        """Process a message through the chat flow"""
        chat_flow = self.chat_flows[chat_id]

        result = chat_flow.kickoff(
            inputs={
                "id": chat_id,
                "message": message,
                # "history": (
                #     "\n".join(f"{msg['role']}: {msg['content']}" for msg in history)
                #     if history
                #     else ""
                # ),
                "history": history,
                "content_info": content_info.model_dump()
            }
        )
        return result
    

def create_content_chatbot() -> gr.Blocks:
    chatbot = ChatbotInterface()

    # S·ª≠ d·ª•ng gr.Blocks ƒë·ªÉ bao b·ªçc gr.ChatInterface v√† c√°c √¥ input
    with gr.Blocks(title="Content Chatbot", theme=gr.themes.Ocean()) as demo:
        gr.Markdown("## ü§ñ Content Creation Assistant")
        gr.Markdown("H√£y ƒëi·ªÅn th√¥ng tin chi ti·∫øt ƒë·ªÉ AI c√≥ th·ªÉ t·∫°o n·ªôi dung ph√π h·ª£p nh·∫•t v·ªõi nhu c·∫ßu c·ªßa b·∫°n!")

        # S·ª≠ d·ª•ng Group thay v√¨ Box
        with gr.Group():
            # T·∫°o kho·∫£ng c√°ch ph√≠a tr√™n
            gr.Markdown("---")
            
            with gr.Row(equal_height=True):
                with gr.Column(scale=1):
                    topic_input = gr.Textbox(
                        label="üìù Ch·ªß ƒë·ªÅ n·ªôi dung",
                        placeholder="VD: M√°y in Brother LD2321 - Gi·∫£i ph√°p in ·∫•n cho doanh nghi·ªáp v·ª´a v√† nh·ªè",
                        info="M√¥ t·∫£ ng·∫Øn g·ªçn v·ªÅ ch·ªß ƒë·ªÅ ch√≠nh c·ªßa n·ªôi dung",
                        lines=2,
                        max_lines=3,
                        container=True,
                        scale=1,
                        autofocus=True,
                        submit_btn="‚èé"
                    )
                    goal_input = gr.Textbox(
                        label="üéØ M·ª•c ti√™u truy·ªÅn th√¥ng",
                        placeholder="VD: Gi·ªõi thi·ªáu t√≠nh nƒÉng ti·∫øt ki·ªám m·ª±c...",
                        info="M·ª•c ti√™u c·ª• th·ªÉ b·∫°n mu·ªën ƒë·∫°t ƒë∆∞·ª£c v·ªõi n·ªôi dung n√†y",
                        lines=2,
                        max_lines=3,
                        container=True,
                        scale=1,
                        submit_btn="‚èé"
                    )

                with gr.Column(scale=1):
                    audience_input = gr.Textbox(
                        label="üë• ƒê·ªëi t∆∞·ª£ng m·ª•c ti√™u",
                        placeholder="VD: Ch·ªß doanh nghi·ªáp v·ª´a v√† nh·ªè...",
                        info="M√¥ t·∫£ chi ti·∫øt v·ªÅ ƒë·ªëi t∆∞·ª£ng kh√°ch h√†ng m·ª•c ti√™u",
                        lines=2,
                        max_lines=3,
                        container=True,
                        scale=1,
                        submit_btn="‚èé"
                    )
                    brand_input = gr.Textbox(
                        label="üè¢ Th√¥ng tin th∆∞∆°ng hi·ªáu",
                        placeholder="VD: Brother - Th∆∞∆°ng hi·ªáu m√°y in Nh·∫≠t B·∫£n...",
                        info="Th√¥ng tin v·ªÅ th∆∞∆°ng hi·ªáu v√† c√°c gi√° tr·ªã c·ªët l√µi",
                        lines=2,
                        max_lines=3,
                        container=True,
                        scale=1,
                        submit_btn="‚èé"
                    )

            # Style input ·ªü h√†ng ri√™ng
            with gr.Row():
                style_input = gr.Textbox(
                    label="üé® Phong c√°ch v√† gi·ªçng ƒëi·ªáu",
                    placeholder="VD: Chuy√™n nghi·ªáp nh∆∞ng d·ªÖ hi·ªÉu...",
                    info="X√°c ƒë·ªãnh c√°ch th·ª©c truy·ªÅn ƒë·∫°t th√¥ng ƒëi·ªáp ph√π h·ª£p v·ªõi ƒë·ªëi t∆∞·ª£ng",
                    lines=2,
                    max_lines=2,
                    container=True,
                    scale=1,
                    submit_btn="‚èé"
                )
            
            # T·∫°o kho·∫£ng c√°ch ph√≠a d∆∞·ªõi
            gr.Markdown("---")

        # ƒê·ªãnh nghƒ©a h√†m chat v·ªõi c√°c tham s·ªë b·ªï sung
        def chat_with_inputs(message, history, topic, goal, audience, brand, style):
            return chatbot.chat(message, history, topic, goal, audience, brand, style)

        # C·∫•u h√¨nh Chatbot v·ªõi c√°c t√≠nh nƒÉng n√¢ng cao
        chat_interface = gr.ChatInterface(
            fn=chat_with_inputs,  # H√†m x·ª≠ l√Ω logic chat
            additional_inputs=[    # C√°c tr∆∞·ªùng input b·ªï sung
                topic_input,
                goal_input,
                audience_input,
                brand_input,
                style_input
            ],
            # C·∫•u h√¨nh giao di·ªán chatbot
            chatbot=gr.Chatbot(
                label="üí¨ Content Assistant Chat",
                height=500,  # Chi·ªÅu cao c·ªë ƒë·ªãnh cho khung chat
                
                # === T√≠nh nƒÉng Copy ===
                show_copy_button=True,     # Cho ph√©p copy t·ª´ng tin nh·∫Øn ri√™ng l·∫ª
                show_copy_all_button=True, # Th√™m n√∫t copy to√†n b·ªô cu·ªôc tr√≤ chuy·ªán
                
                # === C·∫•u h√¨nh hi·ªÉn th·ªã ===
                type="messages",           # ƒê·ªãnh d·∫°ng tin nh·∫Øn ki·ªÉu OpenAI (role/content)
                value=chatbot.default_response,  # Tin nh·∫Øn ch√†o m·ª´ng m·∫∑c ƒë·ªãnh
                # avatar_images=(            # ·∫¢nh ƒë·∫°i di·ªán cho user v√† bot
                #     "./assets/user.png",   # ƒê∆∞·ªùng d·∫´n ƒë·∫øn ·∫£nh user
                #     "./assets/bot.png"     # ƒê∆∞·ªùng d·∫´n ƒë·∫øn ·∫£nh bot
                # ),  
                # Ho·∫∑c d√πng URL
                avatar_images=(
                    "https://img.freepik.com/free-vector/user-circles-set_78370-4704.jpg?t=st=1740734711~exp=1740738311~hmac=b57b205eb68e01a9da4fb109df45cdc3b8c173eaa3ede05ca5e61c55319c7089&w=1060",
                    "https://img.freepik.com/free-vector/cute-bot-say-users-hello-chatbot-greets-online-consultation_80328-195.jpg?t=st=1740734300~exp=1740737900~hmac=2a3760dc39d1bce2f2679ad821172639a19e3c13301faedcdbbb21eb3ddcb125&w=1060"
                ),
                
                # === T√πy ch·ªânh giao di·ªán ===
                bubble_full_width=False,   # Tin nh·∫Øn co gi√£n theo n·ªôi dung
                layout="bubble",           # Giao di·ªán d·∫°ng bong b√≥ng chat hi·ªán ƒë·∫°i
                
                # === H·ªó tr·ª£ ƒë·ªãnh d·∫°ng n·ªôi dung ===
                latex_delimiters=[         # H·ªó tr·ª£ hi·ªÉn th·ªã c√¥ng th·ª©c to√°n h·ªçc
                    {"left": "$$", "right": "$$", "display": True}
                ],
                line_breaks=True,          # Cho ph√©p xu·ªëng d√≤ng trong markdown
                render_markdown=True,       # H·ªó tr·ª£ ƒë·ªãnh d·∫°ng markdown
                sanitize_html=True,        # B·∫£o m·∫≠t - l·ªçc c√°c th·∫ª HTML nguy hi·ªÉm
                
                # === T·ªëi ∆∞u tr·∫£i nghi·ªám ng∆∞·ªùi d√πng ===
                placeholder="H√£y nh·∫≠p y√™u c·∫ßu c·ªßa b·∫°n ƒë·ªÉ b·∫Øt ƒë·∫ßu t·∫°o n·ªôi dung...",  # H∆∞·ªõng d·∫´n khi ch∆∞a c√≥ tin nh·∫Øn
                autoscroll=True,           # T·ª± ƒë·ªông cu·ªôn ƒë·∫øn tin nh·∫Øn m·ªõi nh·∫•t
                group_consecutive_messages=True,  # Gom nh√≥m tin nh·∫Øn li√™n ti·∫øp t·ª´ c√πng ng∆∞·ªùi g·ª≠i
            ),

            # C·∫•u h√¨nh √¥ nh·∫≠p li·ªáu
            textbox=gr.Textbox(
                placeholder="Nh·∫≠p y√™u c·∫ßu c·ªßa b·∫°n... (VD: T·∫°o n·ªôi dung b√†i ƒëƒÉng Facebook gi·ªõi thi·ªáu s·∫£n ph·∫©m)",
                container=True,    # B·ªçc trong container ƒë·ªÉ style ƒë·∫πp h∆°n
                scale=7,           # T·ª∑ l·ªá chi·ªÅu r·ªông so v·ªõi c√°c component kh√°c
                show_label=False,  # ·∫®n label v√¨ kh√¥ng c·∫ßn thi·∫øt
                lines=2,           # S·ªë d√≤ng t·ªëi thi·ªÉu
                max_lines=5,       # S·ªë d√≤ng t·ªëi ƒëa khi m·ªü r·ªông
                autofocus=False,    # T·ª± ƒë·ªông focus khi load trang
                submit_btn=True,   # Hi·ªán n√∫t g·ª≠i v√† cho ph√©p nh·∫•n Enter
                autoscroll=True,   # T·ª± cu·ªôn khi n·ªôi dung d√†i
                show_copy_button=True  # Cho ph√©p copy n·ªôi dung ƒë√£ nh·∫≠p
            ),

            # === C·∫•u h√¨nh chung c·ªßa interface ===
            submit_btn="üöÄ T·∫°o n·ªôi dung",  # Label cho n√∫t g·ª≠i
            title="Content Creation Assistant",  # Ti√™u ƒë·ªÅ c·ªßa ·ª©ng d·ª•ng
            description="H·ªá th·ªëng AI h·ªó tr·ª£ t·∫°o n·ªôi dung th√¥ng minh",  # M√¥ t·∫£ ng·∫Øn
            theme="soft",          # Giao di·ªán nh·∫π nh√†ng, th√¢n thi·ªán
            autofocus=True,        # T·ª± ƒë·ªông focus v√†o √¥ nh·∫≠p li·ªáu
            
            # === T√≠nh nƒÉng v√≠ d·ª• m·∫´u ===
            examples=[             # C√°c v√≠ d·ª• v·ªõi ƒë·∫ßy ƒë·ªß th√¥ng tin cho t·∫•t c·∫£ c√°c tr∆∞·ªùng
                [
                    "T·∫°o n·ªôi dung b√†i ƒëƒÉng Facebook",  # message
                    "M√°y in Brother LD2321",           # topic
                    "Qu·∫£ng b√° s·∫£n ph·∫©m m√°y in m·ªõi",   # goal
                    "Doanh nghi·ªáp v·ª´a v√† nh·ªè",        # audience
                    "Brother - Th∆∞∆°ng hi·ªáu m√°y in Nh·∫≠t B·∫£n", # brand
                    "Chuy√™n nghi·ªáp v√† th√¢n thi·ªán"     # style
                ],
                [
                    "T·∫°o content cho LinkedIn",        # message
                    "M√°y in Brother LD2321",          # topic
                    "X√¢y d·ª±ng th∆∞∆°ng hi·ªáu chuy√™n nghi·ªáp", # goal
                    "Gi√°m ƒë·ªëc doanh nghi·ªáp",         # audience
                    "Brother - 100 nƒÉm kinh nghi·ªám",  # brand
                    "Chuy√™n nghi·ªáp v√† ƒë√°ng tin c·∫≠y"  # style
                ]
            ],
            cache_examples=False,   # T·∫Øt cache ƒë·ªÉ tr√°nh l·ªói
            autoscroll=True,       # T·ª± ƒë·ªông cu·ªôn khi ch·ªçn v√≠ d·ª•
        )

        # Th√™m h∆∞·ªõng d·∫´n s·ª≠ d·ª•ng
        with gr.Accordion("‚ÑπÔ∏è H∆∞·ªõng d·∫´n s·ª≠ d·ª•ng", open=False):
            gr.Markdown("""
            ### C√°ch s·ª≠ d·ª•ng hi·ªáu qu·∫£:
            1. **ƒêi·ªÅn ƒë·∫ßy ƒë·ªß th√¥ng tin** v√†o c√°c tr∆∞·ªùng b√™n tr√™n c√†ng chi ti·∫øt c√†ng t·ªët
            2. **G√µ y√™u c·∫ßu** c·ªßa b·∫°n v√†o √¥ chat (VD: "T·∫°o n·ªôi dung b√†i ƒëƒÉng Facebook")
            3. **Nh·∫•n Enter ho·∫∑c n√∫t T·∫°o n·ªôi dung** ƒë·ªÉ b·∫Øt ƒë·∫ßu
            4. B·∫°n c√≥ th·ªÉ **y√™u c·∫ßu ch·ªânh s·ª≠a** n·∫øu mu·ªën ƒëi·ªÅu ch·ªânh n·ªôi dung
            
            ### M·∫πo hay:
            - S·ª≠ d·ª•ng n√∫t 'Th·ª≠ l·∫°i' ƒë·ªÉ t·∫°o phi√™n b·∫£n kh√°c c·ªßa n·ªôi dung
            - C√≥ th·ªÉ copy n·ªôi dung b·∫±ng n√∫t copy ·ªü g√≥c ph·∫£i m·ªói tin nh·∫Øn
            - C√†ng cung c·∫•p nhi·ªÅu th√¥ng tin, n·ªôi dung t·∫°o ra c√†ng ph√π h·ª£p
            """)

    return demo

if __name__ == "__main__":
    chatbot = create_content_chatbot()
    chatbot.launch(share=True)
    
